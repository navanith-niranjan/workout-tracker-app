# Generated by Django 4.2.3 on 2023-08-26 22:40

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(null=True)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('N', 'Not Specified')], max_length=1, null=True)),
                ('height', models.FloatField(null=True)),
                ('weight', models.FloatField(null=True)),
                ('goals', models.CharField(max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomExerciseList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_exercise_name', models.CharField(max_length=100, null=True)),
                ('custom_exercise_type', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_name', models.CharField(max_length=100, null=True)),
                ('exercise_type', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_number', models.IntegerField(null=True)),
                ('notes', models.CharField(max_length=500, null=True)),
                ('custom_exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.customexerciselist')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.exerciselist')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(max_length=100, null=True)),
                ('date', models.DateField(default=datetime.date.today)),
                ('session_number', models.PositiveIntegerField(null=True)),
                ('session_duration', models.TimeField(null=True)),
                ('session_notes', models.CharField(max_length=500, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeightLiftSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.IntegerField(null=True, unique=True)),
                ('weight', models.FloatField(null=True)),
                ('kgorlb', models.CharField(choices=[('kg', 'kilograms'), ('lb', 'pounds')], max_length=2, null=True)),
                ('reps', models.IntegerField(null=True)),
                ('inbetween_rest_time', models.TimeField(null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.sessions')),
            ],
        ),
        migrations.AddField(
            model_name='sessions',
            name='workout_history',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.workouthistory'),
        ),
        migrations.CreateModel(
            name='RunningSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pace', models.TimeField(null=True)),
                ('distance', models.FloatField(null=True)),
                ('kmormiles', models.CharField(choices=[('km', 'kilometers'), ('mi.', 'miles')], max_length=3, null=True)),
                ('time', models.TimeField(null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.sessions')),
            ],
        ),
        migrations.AddField(
            model_name='customexerciselist',
            name='linked_exercise',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.exerciselist'),
        ),
        migrations.AddField(
            model_name='customexerciselist',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
